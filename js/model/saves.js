// Generated by CoffeeScript 1.8.0
(function() {
  define(["tools/storage"], function(storage) {
    var Saves;
    Saves = (function() {
      function Saves(_at_obj) {
        this.obj = _at_obj;
        this.protocolVersion = 1;
        this.saves = storage.load('saves');
        if (this.saves == null) {
          this.saves = {
            ids: {}
          };
        }
        if ((this.saves != null) && this.saves.version !== this.protocolVersion) {
          this._setDefault();
        }
      }

      Saves.prototype["new"] = function() {
        var id, now;
        now = (new Date).toLocaleString();
        id = 1488;
        while (this.saves.ids[id] != null) {
          id = Math.floor(Math.random() * 100000000000000000);
        }
        this.saves.ids[id] = "" + now;
        this._save();
        this._save(id);
        return ["" + now, id];
      };

      Saves.prototype["delete"] = function(id) {
        delete this.saves.ids[id];
        this._save();
        return storage["delete"]("save" + id);
      };

      Saves.prototype.load = function(id) {
        var rawData;
        rawData = storage.load("save" + id);
        return this.obj.deserialize(rawData);
      };

      Saves.prototype.getList = function() {
        return this.saves.ids;
      };

      Saves.prototype._save = function(id) {
        if (id == null) {
          id = -1;
        }
        switch (id) {
          case -1:
            return storage.save('saves', this.saves);
          default:
            return storage.save("save" + id, this.obj.serialize());
        }
      };

      Saves.prototype._setDefault = function() {
        delete this.saves;
        this.saves = {};
        this.saves = {
          version: this.protocolVersion,
          ids: {}
        };
        return this._save();
      };

      return Saves;

    })();
    return Saves;
  });

}).call(this);

//# sourceMappingURL=saves.js.map
