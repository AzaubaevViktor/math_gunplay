// Generated by CoffeeScript 1.8.0
(function() {
  var Saves, loadByStructure, saveByStructure, storage;

  saveByStructure = Tools.saveByStructure;

  loadByStructure = Tools.loadByStructure;

  storage = Tools.storage;

  Saves = (function() {
    function Saves(_at_structure) {
      this.structure = _at_structure;
      this.protocolVersion = 1;
      this.saves = storage.load('saves');
      if (this.saves == null) {
        this.saves = {
          ids: {}
        };
      }
      if ((this.saves != null) && this.saves.version !== this.protocolVersion) {
        this._setDefault();
      }
    }

    Saves.prototype["new"] = function() {
      var id, now;
      now = (new Date).toLocaleString();
      id = 1488;
      while (this.saves.ids[id] != null) {
        id = Math.floor(Math.random() * 100000000000000000);
      }
      this.saves.ids[id] = "" + now;
      this._save();
      this._save(id, saveByStructure(this.structure, true));
      return ["" + now, id];
    };

    Saves.prototype["delete"] = function(id) {
      delete this.saves.ids[id];
      this._save();
      return storage["delete"]("save" + id);
    };

    Saves.prototype.load = function(id) {
      var data;
      data = storage.load("save" + id);
      return loadByStructure(this.structure, data);
    };

    Saves.prototype.getList = function() {
      return this.saves.ids;
    };

    Saves.prototype._save = function(id, data) {
      if (id == null) {
        id = -1;
      }
      if (data == null) {
        data = void 0;
      }
      switch (id) {
        case -1:
          return storage.save('saves', this.saves);
        default:
          return storage.save("save" + id, data);
      }
    };

    Saves.prototype._setDefault = function() {
      delete this.saves;
      this.saves = {};
      this.saves = {
        version: this.protocolVersion,
        ids: {}
      };
      return this._save();
    };

    return Saves;

  })();

  window.Model.Saves = Saves;

}).call(this);

//# sourceMappingURL=saves.js.map
