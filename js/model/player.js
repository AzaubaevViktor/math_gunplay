// Generated by CoffeeScript 1.10.0
(function() {
  var Player, levels, obj, penalties;

  penalties = [
    {
      "treat": 0,
      "attack": 0
    }, {
      "treat": 1,
      "attack": 3
    }, {
      "treat": 3,
      "attack": 6
    }, {
      "treat": 5,
      "attack": 9
    }, {
      "treat": 1,
      "attack": 12
    }
  ];

  window.SQUARE = "square";

  window.HOSPITAL = "hospital";

  window.RESUSCITATION = "resuscitation";

  window.MORGUE = "morgue";

  levels = (
    obj = {},
    obj["" + SQUARE] = [60, 100],
    obj["" + HOSPITAL] = [30, 60],
    obj["" + RESUSCITATION] = [0, 30],
    obj["" + MORGUE] = [-100000, 0],
    obj
  );

  window.Player = Player = (function() {
    function Player(id, name) {
      this.id = id;
      this.name = name;
      this.health = 100;
      this.solved = 0;
      this.unsolved = 0;
      this.treatment = 0;
      this.penalties = 0;
    }

    Player.prototype.apply = function(d) {
      this.name = d.name;
      this.health = d.health;
      this.solved = d.solved;
      this.unsolved = d.unsolved;
      this.treatment = d.treatment;
      return this.penalties = d.penalties;
    };

    Player.prototype.getLevel = function() {
      var level, ref, scope;
      for (level in levels) {
        scope = levels[level];
        if ((scope[0] < (ref = this.health) && ref <= scope[1])) {
          return level;
        }
      }
    };

    Player.prototype.getAttackValue = function() {
      var penalty;
      penalty = penalties[this.penalties]["attack"];
      return getValScope(10 + this.solved - this.unsolved - penalty - 3 * this.treatment, [0, mgModelSettings.maxAttack]);
    };

    Player.prototype.getTreatValue = function(correct) {
      var penalty, value;
      penalty = penalties[this.penalties]["treat"];
      value = 5 * correct + this.solved - this.unsolved - 3 * this.treatment - 5 - penalty;
      if (mgModelSettings.selfDestroyTreat && (value < 0)) {
        return 0;
      }
      if (mgModelSettings.selfDestroyResuscitation && (this.getLevel() === RESUSCITATION) && (value < 0)) {
        return 0;
      }
      if (this.getLevel() === HOSPITAL) {
        value += mgModelSettings.hospitalPlus;
      }
      return value;
    };

    Player.prototype.dHealth = function(delta) {
      return this.health = getValScope(this.health + delta, [0, 100]);
    };

    Player.prototype.addPenalty = function() {
      return this.penalties = getValScope(this.penalties + 1, [0, penalties.length - 1]);
    };

    return Player;

  })();

}).call(this);

//# sourceMappingURL=player.js.map
