// Generated by CoffeeScript 1.8.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  define(["tools/jsonify"], function(JSONify) {
    var History;
    History = (function(_super) {
      __extends(History, _super);

      function History(_at__players) {
        this._players = _at__players;
        this._create_point = __bind(this._create_point, this);
        this.datas = [];
        this.className = "History";
        this.JSONProperties = ["datas"];
        this.register(History);
      }

      History.prototype.binds = function() {
        var id, player, _ref, _results;
        _ref = this._players;
        _results = [];
        for (id in _ref) {
          player = _ref[id];
          if ("length" !== id) {
            _results.push(player.eventBind(["situations"], this._create_point));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      History.prototype._create_point = function(plFr, plTo, value, type) {
        var point;
        point = {
          type: type,
          playerFrom: {
            name: plFr.name,
            level: plFr.getLevel()
          },
          playerTo: {
            name: plTo ? plTo.name : void 0,
            level: plTo ? plTo.getLevel() : void 0
          },
          value: value
        };
        return this.datas.push(point);
      };

      return History;

    })(JSONify.JSONify);
    return History;
  });

}).call(this);

//# sourceMappingURL=history.js.map
