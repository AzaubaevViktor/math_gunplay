// Generated by CoffeeScript 1.10.0
(function() {
  var View, ViewSettings, checkShowHide, checkShowHideGameMode;

  ViewSettings = (function() {
    function ViewSettings() {}

    return ViewSettings;

  })();

  checkShowHide = function(element, condition) {
    if (condition) {
      return element.show(100);
    } else {
      return element.hide(100);
    }
  };

  checkShowHideGameMode = function(element, gameModeList) {
    return checkShowHide(element, isMode(gameModeList));
  };

  View = (function() {
    function View() {
      this.table = $("table");
      this.tbody = this.table.find("tbody");
      this.addPlayerButton = $('#addPlayerButton');
      this.modeButtonText = $("#modeText");
    }

    View.prototype.generatePlayer = function(player) {
      return $("<tr>").addClass("player").attr("id", "player" + player.id).append([$("<td>").addClass("plId"), $("<td>").addClass("plName"), $("<td>").addClass("plHealth"), $("<td>").addClass("plDamage"), $("<td>").addClass("plSolvedUnsolved")]);
    };

    View.prototype.updatePlayer = function(player) {
      var playerEl;
      playerEl = $("#player" + player.id);
      if (!playerEl.length) {
        playerEl = this.generatePlayer(player);
        this.tbody.append(playerEl);
        playerEl.hide();
      }
      playerEl.removeClass().addClass(player.getLevel());
      playerEl.find(".plId").text(player.id);
      playerEl.find(".plName").text(player.name);
      playerEl.find(".plHealth").text(player.health);
      playerEl.find(".plDamage").text(player.getAttackValue());
      playerEl.find(".plSolvedUnsolved").text(player.solved + "/" + player.unsolved);
      playerEl.show(1000);
    };

    View.prototype.redrawPlayers = function() {
      var i, len, player, ref;
      ref = mgModel.players;
      for (i = 0, len = ref.length; i < len; i++) {
        player = ref[i];
        this.updatePlayer(player);
      }
    };

    View.prototype.redrawPanel = function() {
      if (isMode(MODE_ADD)) {
        this.modeButtonText.text("Добавление игроков");
      } else if (isMode(MODE_DAY)) {
        this.modeButtonText.text("День (ВРЕМЯ)");
      } else if (isMode(MODE_NIGHT)) {
        this.modeButtonText.text("Ночь");
      }
      return checkShowHideGameMode(this.addPlayerButton, MODE_ADD);
    };

    View.prototype.update = function() {
      this.redrawPlayers();
      return this.redrawPanel();
    };

    return View;

  })();

  window.mgView = new View();

  mgView.update();

}).call(this);

//# sourceMappingURL=view.js.map
