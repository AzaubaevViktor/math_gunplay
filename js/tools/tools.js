// Generated by CoffeeScript 1.8.0
(function() {
  define({
    getValScope: function(val, scope) {
      switch (false) {
        case !(scope[0] > val):
          return scope[0];
        case !(scope[1] < val):
          return scope[1];
        default:
          return val;
      }
    },
    strCopy: function(s, n) {
      var i, res;
      res = "";
      i = 0;
      while (i < n) {
        i += 1;
        res += s;
      }
      return res;
    },
    deepCopy: function(v) {
      var property, result, value;
      result = new Object;
      for (property in v) {
        value = v[property];
        if (property[0] !== "_") {
          if (typeof value === "object") {
            result[property] = deepCopy(value);
          } else {
            result[property] = value;
          }
        }
      }
      return result;
    },
    max: function(a, b) {
      if (a > b) {
        return a;
      } else {
        return b;
      }
    },
    min: function(a, b) {
      if (a < b) {
        return a;
      } else {
        return b;
      }
    },
    remove: function(arr, element) {
      var index;
      index = arr.indexOf(element);
      if (index >= 0) {
        return arr.splice(index, 1);
      }
    },
    merge: function(obj1, obj2) {
      var attrName, obj3;
      obj3 = {};
      for (attrName in obj1) {
        obj3[attrName] = obj1[attrName];
      }
      for (attrName in obj2) {
        obj3[attrName] = obj2[attrName];
      }
      return obj3;
    }
  });

}).call(this);

//# sourceMappingURL=tools.js.map
