// Generated by CoffeeScript 1.8.0
(function() {
  define(function() {
    var JSONify, deserialize, isSerializable, serialize, _deserializeFromObject, _serializeToObject;
    window._JSONify_classes = {};
    isSerializable = function(obj) {
      return obj.serialize != null;
    };
    _serializeToObject = function(obj) {
      var k, res, v;
      if (isSerializable(obj)) {
        return obj.serializeToObject();
      } else if (typeof obj === "object") {
        res = new Object();
        for (k in obj) {
          v = obj[k];
          res[k] = (function() {
            switch (isSerializable(v)) {
              case true:
                return v.serializeToObject();
              case false:
                return _serializeToObject(v);
            }
          })();
        }
        return res;
      } else {
        return obj;
      }
    };
    serialize = function(obj) {
      console.info(obj);
      return JSON.stringify(_serializeToObject(obj));
    };
    _deserializeFromObject = function(obj) {
      var k, res, v;
      res = null;
      if ((obj._className != null) && (obj._data != null)) {
        res = new window._JSONify_classes[obj._className];
        res.deserializeFromObject(obj);
      } else if (typeof obj === "object") {
        res = new Object();
        for (k in obj) {
          v = obj[k];
          res[k] = _deserializeFromObject(v);
        }
      } else {
        res = obj;
      }
      return res;
    };
    deserialize = function(jsonString) {
      return _deserializeFromObject(JSON.parse(jsonString));
    };
    JSONify = (function() {
      function JSONify() {
        this.JSONProperties = [];
        this.className = "JSONify";
      }

      JSONify.prototype.register = function(_class) {
        return window._JSONify_classes[this.className] = _class;
      };

      JSONify.prototype.serializeToObject = function() {
        var obj, prop, _i, _len, _ref;
        obj = new Object();
        obj._className = this.className;
        obj._data = {};
        _ref = this.JSONProperties;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          prop = _ref[_i];
          obj._data[prop] = _serializeToObject(this[prop]);
        }
        return obj;
      };

      JSONify.prototype.serialize = function() {
        return JSON.stringify(this.serializeToObject());
      };

      JSONify.prototype.deserializeFromObject = function(obj) {
        var prop, _i, _len, _ref;
        if ((obj._className != null) && (obj._data != null)) {
          _ref = this.JSONProperties;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            prop = _ref[_i];
            if (isSerializable(this[prop])) {
              this[prop].deserializeFromObject(obj._data[prop]);
            } else {
              this[prop] = _deserializeFromObject(obj._data[prop]);
            }
          }
        } else {
          throw obj + " is not serialized " + this.className;
        }
        return void 0;
      };

      JSONify.prototype.deserialize = function(jsonString) {
        return this.deserializeFromObject(JSON.parse(jsonString));
      };

      return JSONify;

    })();
    return {
      serializeToobject: _serializeToObject,
      deserializeFromObject: _deserializeFromObject,
      serialize: serialize,
      deserialize: deserialize,
      JSONify: JSONify
    };
  });

}).call(this);

//# sourceMappingURL=jsonify.js.map
